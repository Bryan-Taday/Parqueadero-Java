
import com.github.sarxos.webcam.Webcam;
import com.github.sarxos.webcam.WebcamPanel;
import com.google.zxing.BinaryBitmap;
import com.google.zxing.LuminanceSource;
import com.google.zxing.MultiFormatReader;
import com.google.zxing.NotFoundException;
import com.google.zxing.Result;
import com.google.zxing.client.j2se.BufferedImageLuminanceSource;
import com.google.zxing.common.HybridBinarizer;
import java.awt.Color;
import java.awt.Image;
import java.awt.image.BufferedImage;
import static java.lang.Thread.sleep;
import java.util.Calendar;
import java.util.concurrent.Executor;
import java.util.concurrent.Executors;
import java.util.concurrent.ThreadFactory;
import java.util.concurrent.atomic.AtomicBoolean;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
/**
 *
 * @author Brayan Taday
 */
public class Camara extends javax.swing.JFrame implements Runnable, ThreadFactory{

    private static final long serialVersionUID = 6441489157408381878L;
    private Executor executor = Executors.newSingleThreadExecutor();
    private AtomicBoolean initialized = new AtomicBoolean(false);
    private Webcam webcam = null;
    private WebcamPanel panel = null;
    Parqueadero_Ups obj = new Parqueadero_Ups();
    static String datoqr;
    /**
     * Creates new form Camara
     */
    public Camara() {
        initComponents();
        setLocationRelativeTo(null);
        lblfondocamara.setIcon(escala("/imagenes/negro.jpg ", lblfondocamara.getWidth(), lblfondocamara.getHeight()));
        IniciarCamara();
    }

    public void IniciarCamara() {
        try {
            webcam = Webcam.getDefault();
            webcam.setViewSize(webcam.getViewSizes()[0]);
            panel = new WebcamPanel(webcam, false);
            panel.setPreferredSize(webcam.getViewSize());
            panel.setOpaque(true);
            panel.setBackground(Color.BLACK);
            //panel.setBounds(0, 0, 400, 300);
            panel.setBounds(0, 0, 208, 208);
            this.PanelCamara.add(panel);
            if (initialized.compareAndSet(false, true)) {
                executor.execute(new Runnable() {
                    @Override
                    public void run() {
                        panel.start();
                    }
                });
            }

            executor.execute(this);
        } catch (Exception e) {
            throw e;
        }
    }
    
    public Icon escala(String s, int ancho, int altura){
        ImageIcon icono = new ImageIcon(getClass().getResource(s));
        Image imagen = icono.getImage();
        Image imagen2 = imagen.getScaledInstance(ancho, altura, java.awt.Image.SCALE_SMOOTH);
        ImageIcon nuevoicono = new ImageIcon(imagen2);
        return(nuevoicono);
    }
    
    public void GenerarFactura(){
        Calendar date = Calendar.getInstance();
        Thread hilo = new Thread(){
            public void run() {
                try {
                    for (vehiculo v : obj.vehiculos) {
                        if(v.getDatoQr().equals(labelqr.getText())){
                            int segundo=date.get(Calendar.SECOND),minuto=date.get(Calendar.MINUTE),hora=date.get(Calendar.HOUR_OF_DAY);
                            String fhora=hora+":"+minuto+":"+segundo;
                            v.setHorasalida(hora);
                            v.setMinutosalida(minuto);
                            v.setSegundosalida(segundo);
                            v.setFHorasalida(fhora);
                            int he=v.getHoraentrada();
                            int me=v.getMinutoentrada();
                            int hs=v.getHorasalida();
                            int ms=v.getMinutosalida();
                            int acum=0,restante;
                            do {                    
                                restante=60-me;
                                me=0;
                                acum=acum+restante;
                                he++;
                            } while (he!=hs);
                            acum=acum+ms;
                            double valor=acum*0.0333;
                            v.setValor("$"+valor);
                            new Factura().setVisible(true);
                            
                        }
                    }
                } catch (Exception e) {
                    System.out.println("errorg"+e);
                }
            }
        };
        hilo.start();
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        PanelCamara = new javax.swing.JPanel();
        labelqr = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        lblfondocamara = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                formWindowClosed(evt);
            }
        });
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Trebuchet MS", 2, 48)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 204, 51));
        jLabel1.setText("Presentar Qr");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 10, -1, 52));

        javax.swing.GroupLayout PanelCamaraLayout = new javax.swing.GroupLayout(PanelCamara);
        PanelCamara.setLayout(PanelCamaraLayout);
        PanelCamaraLayout.setHorizontalGroup(
            PanelCamaraLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 208, Short.MAX_VALUE)
        );
        PanelCamaraLayout.setVerticalGroup(
            PanelCamaraLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        getContentPane().add(PanelCamara, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 81, -1, 208));

        labelqr.setForeground(new java.awt.Color(255, 255, 255));
        getContentPane().add(labelqr, new org.netbeans.lib.awtextra.AbsoluteConstraints(226, 81, 190, 27));

        jButton1.setText("Confirmar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 180, -1, -1));

        jButton2.setText("jButton2");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 260, -1, -1));
        getContentPane().add(lblfondocamara, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 430, 300));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        try {
           boolean resultado = true;
            if(labelqr.getText().equals("")){
                JOptionPane.showMessageDialog(null, "No hay dato");
            }else{
                for(vehiculo v : obj.vehiculos){
                    if(v.getDatoQr().equals(labelqr.getText())){
                        resultado = false;
                        obj.disponible[v.getPuesto()-1]=true;
                        GenerarFactura();
                        datoqr=labelqr.getText();
                        v.setPuesto(0);
                        dispose();
                    }
                }
                if (resultado) {
                    JOptionPane.showMessageDialog(null, "QR invalido");
                }
            }
        } catch (Exception e) {
            System.out.println("error"+e);
        }   
    }//GEN-LAST:event_jButton1ActionPerformed

    private void formWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosed
        webcam.close();
    }//GEN-LAST:event_formWindowClosed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        for(vehiculo v : obj.vehiculos){
            System.out.println(v.getDatoQr());
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Camara.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Camara.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Camara.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Camara.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Camara().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel PanelCamara;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel labelqr;
    private javax.swing.JLabel lblfondocamara;
    // End of variables declaration//GEN-END:variables

    @Override
    public void run() {
        do {
            try {
                Thread.sleep(100);
            } catch (InterruptedException e) {
                e.printStackTrace();
            }

            Result result = null;
            BufferedImage image = null;

            if (webcam.isOpen()) {

                if ((image = webcam.getImage()) == null) {
                    continue;
                }

                LuminanceSource source = new BufferedImageLuminanceSource(image);
                BinaryBitmap bitmap = new BinaryBitmap(new HybridBinarizer(source));

                try {
                    result = new MultiFormatReader().decode(bitmap);
                } catch (NotFoundException e) {
                    // fall thru, it means there is no QR code in image
                }
            }

            if (result != null) {
                labelqr.setText(result.getText());
            }

        } while (true);
    }

    @Override
    public Thread newThread(Runnable r) {
        Thread t = new Thread(r, "example-runner");
        t.setDaemon(true);
        return t;
    }
}
